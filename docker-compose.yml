version: "3"

services:
  registry:
    image: registry:2
    ports:
      - 5000:5000
    volumes:
      - /var/lib/registry:/var/lib/registry
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  web:
    build: web
    image: 192.168.99.100:5000/web
    ports:
      - 80:3000
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 2s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
  api:
    build: api
    image: 192.168.99.100:5000/api
    ports:
      - 81:4000
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 2s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
  couchbase-master:
    image: 192.168.99.100:5000/couchbase
    ports:
      - 8091:8091
    networks:
      couchbase:
        aliases:
          - master.couchbase
    environment:
      TYPE: MASTER
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
  couchbase-worker:
    image: 192.168.99.100:5000/couchbase
    networks:
      - couchbase
    environment:
      TYPE: WORKER
      COUCHBASE_MASTER: master.couchbase
      AUTO_REBALANCE: "false"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager
networks:
  couchbase:
